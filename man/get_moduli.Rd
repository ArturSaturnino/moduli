% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_moduli.R
\name{get_moduli}
\alias{get_moduli}
\title{Compute moduli space metric}
\usage{
get_moduli(
  seuratObject,
  gene.membership = NULL,
  gene.clusters = NULL,
  assay = DefaultAssay(seuratObject),
  npcs = 30,
  weight.by.var = T,
  emb.metric = c("cosine", "euclidean"),
  moduli.metric = c("correlation", "l1"),
  points = NULL,
  n.cores = 1,
  n.pts = 0,
  n.cells = 0,
  stride = 10000,
  seed = 42,
  filebacked = T,
  persist = F,
  verbose = T
)
}
\arguments{
\item{seuratObject}{A Seurat object}

\item{gene.membership}{An integer vector with gene cluster assignments ans genes as names}

\item{gene.clusters}{Clusters of genes as a list of character vectors, these clusters may
intersect (the user must give exactly one the arguments gene.membership or gene.clusters)}

\item{assay}{Assay in which to run PCA (\code{DefaultAssay(seuratObject)} by default). The assay must have a
"scale.data" slot}

\item{npcs}{Number of principal components (defaults to 30)}

\item{weight.by.var}{Weight the cell embedding by variance of each PC (defaults to True)}

\item{emb.metric}{Type of embedding metric, options are "cosine" and "euclidean". Default value is cosine}

\item{moduli.metric}{Type of moduli metric, options are "correlation" and  "l1". Deafult value is "correlation"}

\item{points}{Points to be considered as a list of integer vectors. If NULL all nonempty subsets of the
set of clusters will be considered (defaults to NULL)}

\item{n.cores}{Number of cores to use}

\item{n.pts}{Number of points to subsample, if 0 all points are taken (default is 0)}

\item{n.cells}{Number of cells to subsample when computing distances in the moduli space, if 0 all
cells are used (default is 0).}

\item{stride}{Number of pairs of cells to use in one iteration when computing the moduli metric. Taking
larger strides is more efficient but requires more memory (default is 10000)}

\item{seed}{Random seed to use (default is 42)}

\item{filebacked}{Use a filebacked bigmatrix to store embeddings (default is TRUE)}

\item{persist}{Keep bigmatrix with embeddings (default is FALSE)}

\item{verbose}{Print time stamps (default is TRUE)}
}
\value{
An object of class moduli with the following components:
\item{gene.clusters}{A data.frame with gene clusters}
\item{points}{A data.frame with point metadata}
\item{metric}{A 'dist' object with the moduli metric}
\item{seurat}{The Seurat object used to contruct the moduli}
\item{assay}{Name of the assay used to construct the moduli}
\item{cells}{Character vector with names of cells used to compute the moduli metric}
\item{npcs}{Number of principal components used in moduli construction}
}
\description{
Here, by moduli space we mean a metric space where each point represents an embedding
of cells by PCA with a different choice of features, and each choice of features is a
combination of gene clusters. By default, computes PCA embeddings of all nonempty 
combinations of gene clusters.
}
\details{
Computing the moduli space is very memory and processing intensive, specially
computing the distances in the moduli space. The time complexity of the algorithm is
\deqn{O(n.cells^2 n.pts^2 npcs + n.cells^2 n.pts^2)}
and by default \eqn{n.pts = 2^{n.clusters} - 1}, where \eqn{n.clusters} is the number of  gene clusters.
The matrix with embeddings has about \eqn{8*n.pts*npcs*n.cells*10^{-9}} GB, and in
computing distances, each core will use need about \eqn{8*stride*n.pts*10^{-9}} GB.
}
\examples{
library(Seurat)
set.seed(123)

data("pbmc_small")

# normalize data
pbmc_small <- SCTransform(pbmc_small, verbose = F)

# cluster genes
pam <- gene_medioid_clustering(pbmc_small, 6)

# compute moduli
pbmc_small_moduli <- get_moduli(pbmc_small, gene.membership = pam$clustering, npcs = 3, verbose = F, filebacked = F)


}
